apply plugin: 'java'
apply from: "versions.gradle"
apply plugin: 'idea'
apply plugin: 'eclipse'

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Dead-Code-Detection',
                'Main-Class': 'com.devfactory.deadcodedetector.AppInitializer'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    maven {
        url "http://cn-nexus.swarm.devfactory.com/nexus/content/repositories/thirdparty/"
    }
    maven {
        url "https://scm.devfactory.com/nexus/content/groups/public/"
    }
}
dependencies {
    compile "org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}"
    compile "io.spring.gradle:dependency-management-plugin:${versions.springDependencyManagement}"
    compile "io.franzbecker:gradle-lombok:${versions.lombok}"
    compile "org.springframework.boot:spring-boot-starter-actuator:1.5.1.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-web:1.5.1.RELEASE"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:1.5.1.RELEASE"
    compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.10.Final'
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jacksonDatatype}"
    compile "javax.inject:javax.inject:${versions.inject}"
    compile "org.apache.commons:commons-lang3:${versions.comonsLang}"
    compile "commons-io:commons-io:${versions.commonsIo}"
    compile "com.google.guava:guava:${versions.guava}"
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
    compile group: 'com.h2database', name: 'h2', version: '1.4.195'
    compile("io.springfox:springfox-swagger2:${versions.swagger}")
    compile("io.springfox:springfox-swagger-ui:${versions.swagger}")
    compile "org.flywaydb:flyway-core:3.2.1"
    // Findbus
    compile "com.google.code.findbugs:annotations:${versions.findbugs}"
    compile "com.scitools.understand:understand-plugin:1.1.3"
    // Graylog
    compile "biz.paluch.logging:logstash-gelf:${versions.grayLog}"

    // https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '2.2.0.201212191850-r'
    compile "com.querydsl:querydsl-core:${versions.querydsl}"
    compile "com.querydsl:querydsl-jpa:${versions.querydsl}"
    compileOnly "com.querydsl:querydsl-apt:${versions.querydsl}:jpa"
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.2.3.Final'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.1'

    // Test dependencies
    testCompile("org.springframework.boot:spring-boot-starter-test:1.5.1.RELEASE")
    //testCompile("com.h2database:h2")
    testCompile("org.assertj:assertj-core")
    testCompile("io.rest-assured:rest-assured:${versions.restAssured}")
    testCompile("net.javacrumbs.json-unit:json-unit-fluent:${versions.jsonUnitFluent}")
    testCompile("pl.pojo:pojo-tester:${versions.pojoTester}")

}

subprojects { subproject ->

    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'

    springBoot {
        buildInfo()
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR4"
        }

    }
    Checkstyle {
        ignoreFailures = true
        toolVersion = '7.5.1'
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    }

    Pmd {
        ignoreFailures = false
        sourceSets = [sourceSets.main]
        rulePriority = 2
        toolVersion = '5.5.3'
        ruleSetConfig = resources.text.fromFile("${rootProject.projectDir}/config/pmd/ruleset.xml")
    }


    FindBugs {
        ignoreFailures = false
        sourceSets = [sourceSets.main]
    }


}



